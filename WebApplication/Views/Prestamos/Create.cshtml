@model CommonComponents.DTOs.PrestamosDTO

@{
    ViewBag.Title = "Create";
}
@section style
{
    @Styles.Render("~/bundles/datepickerMaterialcss")
}
@section scripts
{
    @Scripts.Render("~/bundles/datepickerMaterialjs")
    <script>
        $('.datepicker').bootstrapMaterialDatePicker({ format: 'DD/MM/YYYY HH:mm', minDate: new Date() });
    </script>
}

<h2>Crear</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Préstamos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.pre_fecha, "Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pre_fecha, new { htmlAttributes = new { @class = "datepicker form-control" } })
                @Html.ValidationMessageFor(model => model.pre_fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pre_usuario, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.pre_usuario, (IEnumerable<SelectListItem>)ViewBag.listUsuarios, "Seleccionar usuario")
                @Html.ValidationMessageFor(model => model.pre_usuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear préstamo" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<br />

<!--vista parcial sin contenido lógico o sin modelo-->
@*@Html.Partial("_AddLibros")*@
@using CommonComponents.DTOs
@if ((PrestamosDTO)Session["PrestamosDTO"] != null)
{
    //como esta vista trae contenido lógico de un controlador utilizamos RenderAction que también envía parámetros , new { guid = "guid" }
    // a diferencia de Render parcial que no permite
    Html.RenderAction("_AddLibros", "Prestamos");
    Html.RenderAction("_ListLibros", "Prestamos");
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>
